<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init

//var
timer = 0;
if(global.dif = 1){
    init_y = obj_player.y + irandom_range(-120, 120);
    wall_y_begin = init_y - irandom_range(10, 30);
    wall_y_end = init_y + irandom_range(10, 30);
}
else if(global.dif = 2){
    init_y = obj_player.y + irandom_range(-100, 100);
    wall_y_begin = init_y - irandom_range(10, 60);
    wall_y_end = init_y + irandom_range(10, 60);
}
else if(global.dif = 3){
    init_y = obj_player.y + irandom_range(-10, 10);
    wall_y_begin = init_y - irandom_range(10, 150);
    wall_y_end = init_y + irandom_range(10, 150);
}
wall_y_begin = clamp(wall_y_begin, 80, 480);
wall_y_end = clamp(wall_y_end, 80, 480)

//alarms
alarm[0] = 5;

//create instance
instance_create(room_width / 2, ((wall_y_end - wall_y_begin) / 2) + wall_y_begin, obj_warning);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy self

instance_destroy(self);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///timer

if(timer &lt; 10){
    timer += 1;
    alarm[0] = 5;
}
else if(timer &gt;= 1){
    alarm[1] = 150;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///wall activation


//when wall activated, do
if(timer &gt;= 10 &amp;&amp; instance_exists(obj_player)){
    instance_destroy(obj_warning);
    
    //if player hit the wall
    if(obj_player.y &gt;= wall_y_begin &amp;&amp; obj_player.y &lt;= wall_y_end){
        if(global.dif = 2) obj_player.hp -= 2;
        else obj_player.hp -= 5;
        
        if(instance_exists(obj_hitscreen)){
            if(!global.reduce){ obj_hitscreen.image_alpha = 0.3; obj_hitscreen.alarm[0] = 5;}
            audio_play_sound(snd_hit, 10, false);
            
            obj_player.get_hit = true;
            obj_player.alarm[0] = 10;
            
            if(global.dif = 3 &amp;&amp; instance_exists(obj_player)) obj_player.coin += (global.coin_earn * 0.1);
            
            obj_game.vibrate = 10;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_red);

if(timer &lt; 10) draw_rectangle(0, wall_y_begin, room_width, wall_y_end, true);
else if(timer &gt;= 10) draw_rectangle(0, wall_y_begin, room_width, wall_y_end, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
